[{"title":"使用华为模拟器eNSP搭建网络自动化场景","url":"/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/","content":"eNSP安装eNSP的安装过程省略，才接触eNSP时，安装会遇到需要问题，这里给出我目前能够正常使用的相关软件版本：\n\neNSP 1.3.00.100 V100R003C00 SPC100 （目前eNSP官网已经不再进行更新）\nVirtualBox Version 5.2.40 r137108\nNpcap 1.10\nWinPcap 4.1.3\n\neNSP第一次新建拓扑前，记得先注册设备：\n\n右上角找到“菜单‘，然后选中”工具“，单击”注册设备“\n\n勾选所有设备，然后点击”注册“\n\n\n\n使用VirtualBox安装自动化Ubuntu 18.04 | 20.04\n打开VirtualBox，在右上角单击”New“\n\n\n分配内存大小 — 根据电脑配置，为虚拟机分配内存，1G或2G都行（当然笔者宿主机内存较大，选择了4G），然后Next继续\n\n选择VM，选中”Create a virtual hard disk now“，单击”Create“\n\n后面的几步都选择默认勾选 — ”VDI“ + ”Dynamic allocated“\n\n分配存储大小，建议配置15G左右，分配太小可能会无法安装，单击”Create“后退回到主界面\n\n\n这时选中你刚创建的ubuntu主机，然后单击上方菜单的”Start“运行\n\n此时弹出运行界面，你需要选择你要安装的镜像的路径\n\n\n后续就会进入ubuntu的安装步骤（此处省略ubuntu后续安装步骤）\n\n\n配置Ubuntu远程客户端这里以ubuntu 18.04为例\n\n重新设置ubuntu 18.04的国内镜像源并刷新列表进行更新\n【Ubuntu】Ubuntu 18.04 LTS 更换国内源–解决终端下载速度慢的问题\n\n安装Python和相关依赖\napt-get install python -yapt-get install build-essential libssl-dev libffi-dev -yapt-get install python-pip -yapt-get install python3-pip -y\n安装paramiko和netmiko\npip install cryptographypip install paramikopip install netmikopip3 install paramikopip3 install netmiko\n\n使用Telnet来配置S3700\n设置Cloud\n\n端口增加完成后，在端口映射入端口和出端口选择不同端口（顺序不影响），然后勾选双向通道，单击”增加“，此时端口映射表会增加一对端口。\n\nCloud设置完毕后，Cloud可以与SW1进行连接了，下图为测试拓扑\n\n\n在SW1上配置telnet用户与密码（默认开启telnet）\n#aaa local-user sht1 password cipher Huawei local-user sht1 privilege level 15 local-user sht1 service-type telnet#interface Vlanif1 ip address 192.168.50.1 255.255.255.0#user-interface vty 0 4 authentication-mode aaa user privilege level 15 protocol inbound all\n在Ubuntu 18.04上配置telent01.py脚本用于批量创建vlan\n\nPython 3.6 脚本测试\n#!/usr/bin/env python3import getpassimport telnetlibHOST = &quot;192.168.50.1&quot;user = &quot;sht1&quot;password = getpass.getpass()tn = telnetlib.Telnet(HOST)tn.read_until(b&quot;Username:&quot;)tn.write(user.encode(&#x27;ascii&#x27;) + b&quot;\\n&quot;)if password:    tn.read_until(b&quot;Password:&quot;)    tn.write(password.encode(&#x27;ascii&#x27;) + b&quot;\\n&quot;)tn.write(b&quot;system\\n&quot;)tn.write(b&quot;vlan 2\\n&quot;)tn.write(b&quot;quit\\n&quot;)tn.write(b&quot;vlan 3\\n&quot;)tn.write(b&quot;quit\\n&quot;)tn.write(b&quot;vlan 4\\n&quot;)tn.write(b&quot;quit\\n&quot;)tn.write(b&quot;vlan 5\\n&quot;)tn.write(b&quot;quit\\n&quot;)tn.write(b&quot;return\\n&quot;)tn.write(b&quot;quit\\n&quot;)print(tn.read_all().decode(&#x27;ascii&#x27;))\nPython 2.7 脚本测试\n#!/usr/bin/env python2import getpassimport timeimport telnetlibHOST = &quot;192.168.50.1&quot;user = &quot;sht1&quot;password = getpass.getpass()tn = telnetlib.Telnet(HOST)tn.read_until(&quot;Username:&quot;)tn.write(user + &quot;\\n&quot;)if password:    tn.read_until(&quot;Password:&quot;)    tn.write(password + &quot;\\n&quot;)tn.write(&quot;system\\n&quot;)tn.write(&quot;vlan 6\\n&quot;)tn.write(&quot;q\\n&quot;)tn.write(&quot;vlan 7\\n&quot;)tn.write(&quot;q\\n&quot;)tn.write(&quot;vlan 8\\n&quot;)tn.write(&quot;q\\n&quot;)tn.write(&quot;vlan 9\\n&quot;)tn.write(&quot;q\\n&quot;)tn.write(&quot;vlan 10\\n&quot;)tn.write(&quot;q\\n&quot;)tn.write(&quot;return\\n&quot;)tn.write(&quot;q\\n&quot;)print tn.read_all()\n\n\n验证脚本配置是否在SW1上生效\n[SW1]display vlan The total number of vlans is : 10--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/2(D)     Eth0/0/3(D)     Eth0/0/4(D)                     Eth0/0/5(D)     Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)                     Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)                    Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)                    Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)                    Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)      2    common  3    common  4    common  5    common  6    common  7    common  8    common  9    common  10   common  VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         2    enable  default       enable  disable    VLAN 0002                         3    enable  default       enable  disable    VLAN 0003                         4    enable  default       enable  disable    VLAN 0004                         5    enable  default       enable  disable    VLAN 0005                         6    enable  default       enable  disable    VLAN 0006                         7    enable  default       enable  disable    VLAN 0007                         8    enable  default       enable  disable    VLAN 0008                         9    enable  default       enable  disable    VLAN 0009                         10   enable  default       enable  disable    VLAN 0010\n虽然配置是完成了，但是在运行脚本的过程中也遇到了问题，目前该问题还没有解决，希望有大佬出面解决\n下面是报错：\nTraceback (most recent call last):  File &quot;./telnet01.py&quot;, line 29, in &lt;module&gt;    print(tn.read_all().decode(&#x27;ascii&#x27;))  File &quot;/usr/lib/python3.6/telnetlib.py&quot;, line 333, in read_all    self.fill_rawq()  File &quot;/usr/lib/python3.6/telnetlib.py&quot;, line 524, in fill_rawq    buf = self.sock.recv(65535)ConnectionResetError: [Errno 104] Connection reset by peerTraceback (most recent call last):  File &quot;./telnet02.py&quot;, line 34, in &lt;module&gt;    print tn.read_all()  File &quot;/usr/lib/python2.7/telnetlib.py&quot;, line 385, in read_all    self.fill_rawq()  File &quot;/usr/lib/python2.7/telnetlib.py&quot;, line 576, in fill_rawq    buf = self.sock.recv(65535)socket.error: [Errno 104] Connection reset by peer\n\n","categories":["Network Automation"],"tags":["Python","Telnet","eNSP","Network Automation网络自动化"]}]