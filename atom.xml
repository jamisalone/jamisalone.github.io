<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-18T12:08:56.236Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Sht</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用华为模拟器eNSP搭建网络自动化场景</title>
    <link href="http://example.com/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/"/>
    <id>http://example.com/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/</id>
    <published>2021-03-18T12:00:12.000Z</published>
    <updated>2021-03-18T12:08:56.236Z</updated>
    
    <content type="html"><![CDATA[<h1 id="eNSP安装"><a href="#eNSP安装" class="headerlink" title="eNSP安装"></a>eNSP安装</h1><p>eNSP的安装过程省略，才接触eNSP时，安装会遇到需要问题，这里给出我目前能够正常使用的相关软件版本：</p><ul><li>eNSP 1.3.00.100 V100R003C00 SPC100 （目前eNSP官网已经不再进行更新）</li><li>VirtualBox Version 5.2.40 r137108</li><li>Npcap 1.10</li><li>WinPcap 4.1.3</li></ul><p>eNSP第一次新建拓扑前，记得先注册设备：</p><ul><li><p>右上角找到“菜单‘，然后选中”工具“，单击”注册设备“</p></li><li><p>勾选所有设备，然后点击”注册“</p><p><img src="/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/Untitled.png" alt="Untitled"></p></li></ul><h1 id="使用VirtualBox安装自动化Ubuntu-18-04-20-04"><a href="#使用VirtualBox安装自动化Ubuntu-18-04-20-04" class="headerlink" title="使用VirtualBox安装自动化Ubuntu 18.04 | 20.04"></a>使用VirtualBox安装自动化Ubuntu 18.04 | 20.04</h1><ul><li><p>打开VirtualBox，在右上角单击”New“</p><p><img src="/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/Untitled%201.png" alt="Untitled 1"></p></li><li><p>分配内存大小 — 根据电脑配置，为虚拟机分配内存，1G或2G都行（当然笔者宿主机内存较大，选择了4G），然后Next继续</p></li><li><p>选择VM，选中”Create a virtual hard disk now“，单击”Create“</p></li><li><p>后面的几步都选择默认勾选 — ”VDI“ + ”Dynamic allocated“</p></li><li><p>分配存储大小，建议配置15G左右，分配太小可能会无法安装，单击”Create“后退回到主界面</p><p><img src="/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/Untitled%202.png" alt="Untitled 2"></p></li><li><p>这时选中你刚创建的ubuntu主机，然后单击上方菜单的”Start“运行</p></li><li><p>此时弹出运行界面，你需要选择你要安装的镜像的路径</p><p><img src="/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/Untitled%203.png" alt="Untitled 3"></p></li><li><p>后续就会进入ubuntu的安装步骤（此处省略ubuntu后续安装步骤）</p></li></ul><h1 id="配置Ubuntu远程客户端"><a href="#配置Ubuntu远程客户端" class="headerlink" title="配置Ubuntu远程客户端"></a>配置Ubuntu远程客户端</h1><p>这里以ubuntu 18.04为例</p><ul><li><p>重新设置ubuntu 18.04的国内镜像源并刷新列表进行更新</p><p><a class="link" href="https://zhuanlan.zhihu.com/p/61228593">【Ubuntu】Ubuntu 18.04 LTS 更换国内源–解决终端下载速度慢的问题<i class="fas fa-external-link-alt"></i></a></p></li><li><p>安装Python和相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python -y</span><br><span class="line">apt-get install build-essential libssl-dev libffi-dev -y</span><br><span class="line">apt-get install python-pip -y</span><br><span class="line">apt-get install python3-pip -y</span><br></pre></td></tr></table></figure></li><li><p>安装paramiko和netmiko</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install cryptography</span><br><span class="line">pip install paramiko</span><br><span class="line">pip install netmiko</span><br><span class="line">pip3 install paramiko</span><br><span class="line">pip3 install netmiko</span><br></pre></td></tr></table></figure></li></ul><h1 id="使用Telnet来配置S3700"><a href="#使用Telnet来配置S3700" class="headerlink" title="使用Telnet来配置S3700"></a>使用Telnet来配置S3700</h1><ul><li><p>设置Cloud</p><p><img src="/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/Untitled%204.png" alt="Untitled 4"></p><p>端口增加完成后，在端口映射入端口和出端口选择不同端口（顺序不影响），然后勾选双向通道，单击”增加“，此时端口映射表会增加一对端口。</p></li><li><p>Cloud设置完毕后，Cloud可以与SW1进行连接了，下图为测试拓扑</p><p><img src="/2021/03/18/Set-up-Network-Automation-Using-Huawei-Emulator-eNSP/Untitled%205.png" alt="Untitled 5"></p></li><li><p>在SW1上配置telnet用户与密码（默认开启telnet）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">aaa</span><br><span class="line"> local-user sht1 password cipher Huawei</span><br><span class="line"> local-user sht1 privilege level 15</span><br><span class="line"> local-user sht1 service-type telnet</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface Vlanif1</span><br><span class="line"> ip address 192.168.50.1 255.255.255.0</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">user-interface vty 0 4</span><br><span class="line"> authentication-mode aaa</span><br><span class="line"> user privilege level 15</span><br><span class="line"> protocol inbound all</span><br></pre></td></tr></table></figure></li><li><p>在Ubuntu 18.04上配置telent01.py脚本用于批量创建vlan</p><ul><li><p>Python 3.6 脚本测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python3</span></span><br><span class="line">import getpass</span><br><span class="line">import telnetlib</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&quot;192.168.50.1&quot;</span></span><br><span class="line">user = <span class="string">&quot;sht1&quot;</span></span><br><span class="line">password = getpass.getpass()</span><br><span class="line"></span><br><span class="line">tn = telnetlib.Telnet(HOST)</span><br><span class="line"></span><br><span class="line">tn.read_until(b<span class="string">&quot;Username:&quot;</span>)</span><br><span class="line">tn.write(user.encode(<span class="string">&#x27;ascii&#x27;</span>) + b<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> password:</span><br><span class="line">    tn.read_until(b<span class="string">&quot;Password:&quot;</span>)</span><br><span class="line">    tn.write(password.encode(<span class="string">&#x27;ascii&#x27;</span>) + b<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">tn.write(b<span class="string">&quot;system\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;vlan 2\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;quit\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;vlan 3\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;quit\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;vlan 4\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;quit\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;vlan 5\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;quit\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;return\n&quot;</span>)</span><br><span class="line">tn.write(b<span class="string">&quot;quit\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(tn.read_all().decode(<span class="string">&#x27;ascii&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><p>Python 2.7 脚本测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python2</span></span><br><span class="line">import getpass</span><br><span class="line">import time</span><br><span class="line">import telnetlib</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&quot;192.168.50.1&quot;</span></span><br><span class="line">user = <span class="string">&quot;sht1&quot;</span></span><br><span class="line">password = getpass.getpass()</span><br><span class="line"></span><br><span class="line">tn = telnetlib.Telnet(HOST)</span><br><span class="line"></span><br><span class="line">tn.read_until(<span class="string">&quot;Username:&quot;</span>)</span><br><span class="line">tn.write(user + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> password:</span><br><span class="line">    tn.read_until(<span class="string">&quot;Password:&quot;</span>)</span><br><span class="line">    tn.write(password + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">tn.write(<span class="string">&quot;system\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;vlan 6\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;q\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;vlan 7\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;q\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;vlan 8\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;q\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;vlan 9\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;q\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;vlan 10\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;q\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;return\n&quot;</span>)</span><br><span class="line">tn.write(<span class="string">&quot;q\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> tn.read_all()</span><br></pre></td></tr></table></figure></li></ul></li><li><p>验证脚本配置是否在SW1上生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[SW1]display vlan </span><br><span class="line">The total number of vlans is : 10</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">U: Up;         D: Down;         TG: Tagged;         UT: Untagged;</span><br><span class="line">MP: Vlan-mapping;               ST: Vlan-stacking;</span><br><span class="line"><span class="comment">#: ProtocolTransparent-vlan;    *: Management-vlan;</span></span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">VID  Type    Ports                                                          </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">1    common  UT:Eth0/0/1(U)     Eth0/0/2(D)     Eth0/0/3(D)     Eth0/0/4(D)     </span><br><span class="line">                Eth0/0/5(D)     Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)     </span><br><span class="line">                Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)    </span><br><span class="line">                Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)    </span><br><span class="line">                Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)    </span><br><span class="line">                Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)      </span><br><span class="line"></span><br><span class="line">2    common  </span><br><span class="line">3    common  </span><br><span class="line">4    common  </span><br><span class="line">5    common  </span><br><span class="line">6    common  </span><br><span class="line">7    common  </span><br><span class="line">8    common  </span><br><span class="line">9    common  </span><br><span class="line">10   common  </span><br><span class="line"></span><br><span class="line">VID  Status  Property      MAC-LRN Statistics Description      </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">1    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0001                         </span><br><span class="line">2    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0002                         </span><br><span class="line">3    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0003                         </span><br><span class="line">4    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0004                         </span><br><span class="line">5    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0005                         </span><br><span class="line">6    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0006                         </span><br><span class="line">7    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0007                         </span><br><span class="line">8    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0008                         </span><br><span class="line">9    <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0009                         </span><br><span class="line">10   <span class="built_in">enable</span>  default       <span class="built_in">enable</span>  <span class="built_in">disable</span>    VLAN 0010</span><br></pre></td></tr></table></figure></li><li><p>虽然配置是完成了，但是在运行脚本的过程中也遇到了问题，目前该问题还没有解决，希望有大佬出面解决</p><p>下面是报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;./telnet01.py&quot;</span>, line 29, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span>(tn.read_all().decode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.6/telnetlib.py&quot;</span>, line 333, <span class="keyword">in</span> read_all</span><br><span class="line">    self.fill_rawq()</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.6/telnetlib.py&quot;</span>, line 524, <span class="keyword">in</span> fill_rawq</span><br><span class="line">    buf = self.sock.recv(65535)</span><br><span class="line">ConnectionResetError: [Errno 104] Connection reset by peer</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;./telnet02.py&quot;</span>, line 34, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span> tn.read_all()</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python2.7/telnetlib.py&quot;</span>, line 385, <span class="keyword">in</span> read_all</span><br><span class="line">    self.fill_rawq()</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python2.7/telnetlib.py&quot;</span>, line 576, <span class="keyword">in</span> fill_rawq</span><br><span class="line">    buf = self.sock.recv(65535)</span><br><span class="line">socket.error: [Errno 104] Connection reset by peer</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;eNSP安装&quot;&gt;&lt;a href=&quot;#eNSP安装&quot; class=&quot;headerlink&quot; title=&quot;eNSP安装&quot;&gt;&lt;/a&gt;eNSP安装&lt;/h1&gt;&lt;p&gt;eNSP的安装过程省略，才接触eNSP时，安装会遇到需要问题，这里给出我目前能够正常使用的相关软件版本：&lt;/</summary>
      
    
    
    
    <category term="Network Automation" scheme="http://example.com/categories/Network-Automation/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Telnet" scheme="http://example.com/tags/Telnet/"/>
    
    <category term="eNSP" scheme="http://example.com/tags/eNSP/"/>
    
    <category term="Network Automation网络自动化" scheme="http://example.com/tags/Network-Automation%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
</feed>
